input {
    kafka {
        bootstrap_servers => "elk03:9092,elk04:9092,elk05:9092"
        topics => ["us_dailyRolling"]
        codec => "json"
    }
}

filter {
    if [fields][log_topic] == "us_dailyRolling" {
        grok {
            match =>["message", "\[%{DATA:raw_datetime}\]%{SPACE}-%{SPACE}%{DATA:Level}%{SPACE}-%{SPACE}%{DATA:ClassName}\.%{DATA:MethodName}\(%{WORD:VmID}\,%{WORD}\(%{WORD}\:%{NUMBER:OrderID}\,%{SPACE}%{WORD}\:%{NUMBER},%{SPACE}%{WORD}\:%{NUMBER:ProductID},%{SPACE}%{WORD}\:%{NUMBER},%{SPACE}%{WORD}\:(?:%{NUMBER}|),%{SPACE}%{WORD}\:%{NUMBER},%{SPACE}%{WORD}\:%{NUMBER},%{SPACE}%{WORD}\:%{NUMBER},%{SPACE}%{WORD}\:%{NUMBER:DeviceID}\)\)=%{WORD}\(%{WORD}\:%{NUMBER:Result},%{SPACE}%{WORD}\:%{DATA}\)\,%{SPACE}%{WORD}\=%{NUMBER}%{SPACE}%{WORD}"]

            match =>["message", "\[%{DATA:raw_datetime}\]%{SPACE}-%{SPACE}%{DATA:Level}%{SPACE}-%{SPACE}%{DATA:ClassName}\.%{DATA:MethodName}\(%{WORD:VmID}\,%{WORD}\,\{\"%{WORD}\":%{NUMBER:OrderID}\,\"%{WORD}\":%{NUMBER:ProductID}\,\"%{WORD}\"\:\"%{NUMBER}\"\,\"%{WORD}\":%{NUMBER}\,\"%{WORD}\":%{NUMBER}\,\"%{WORD}\":%{NUMBER}\,\"%{WORD}\":%{NUMBER}\,\"%{WORD}\":\"%{NUMBER:deviceID}\"\}\,%{WORD}\)\=%{NUMBER}\,%{SPACE}%{WORD}\=%{NUMBER}%{SPACE}%{WORD}"]

            match =>["message", "\[%{DATA:raw_datetime}\]%{SPACE}-%{SPACE}%{DATA:Level}%{SPACE}-%{SPACE}%{WORD}>>>\{%{WORD}\=%{WORD:msgType}\,%{SPACE}%{WORD}\=\{%{WORD}\=%{WORD:Result}\,%{SPACE}%{WORD}\=%{WORD:OrderID}\,%{SPACE}%{WORD}\=%{DATA:Message}\,%{SPACE}%{WORD}\=%{WORD:DeviceID}\}\}\,%{SPACE}%{WORD}<<<%{NUMBER}"]
            
        }

        date {
           match => [ "raw_datetime", "YYYY-MM-dd HH:mm:ss,SSS" ]
        }
            
        mutate {
           remove_field  => [ "raw_datetime" ]
       }
    }
}


output {
    if [fields][log_topic] == "us_dailyRolling" {
        elasticsearch {
            hosts => ["172.16.10.40:9200", "172.16.10.43:9200", "172.16.10.223:9200"]
            index => "us-dailyrolling-%{+YYYY.MM.dd}"
            document_type => "%{[fields][document_type]}"
        }
    }

}