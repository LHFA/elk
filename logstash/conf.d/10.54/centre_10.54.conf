input {
    beats {
        port => 5044
    }

    kafka {
        bootstrap_servers => "elk03:9092,elk04:9092,elk05:9092"
        topics => ["nginx_access_log"]
        group_id => "logstash-file"
        consumer_threads => 9
        codec => "json"
    }
    kafka {
        bootstrap_servers => "elk03:9092,elk04:9092,elk05:9092"
        topics => ["escort_log", "usercenter_log", "monk_log"]
        codec => "json"
    }
}
filter {
    if [type] in ["alipay_log", "weixinpay_log", "uboxapi_log", "actualtrade_log", "client_log", "uboxgame_log"] {
        mutate {
            gsub => [
                "source", ".*/", ""
            ]
        }
    }
    if [fields][log_topic] == "monk_log" {
        mutate {
            gsub => [
                "source", "/ubox/logs/monk/app/log/", ""
            ]
        }
        grok {
            match => ["message", "%{HTTPDATE:raw_datetime}"]
        }

        date {
            match => ["raw_datetime", "YYYY/MM/dd HH:mm:ss"]
            remove_field => [ "raw_datetime" ]
        }

        ruby {
            code => "event.set('local_time', event.get('@timestamp').time.localtime.strftime('%Y%m%d'))"
        }
    }
    if [fields][log_topic] == "escort_log" {
        mutate {
            gsub => [
                "source", "/ubox/logs/escort/app/", ""
            ]
        }
        grok {
            match => ["message", "%{HTTPDATE:raw_datetime}"]
        }

        date {
            match => ["raw_datetime", "YYYY/MM/dd HH:mm:ss"]
            remove_field => [ "raw_datetime" ]
        }

        ruby {
            code => "event.set('local_time', event.get('@timestamp').time.localtime.strftime('%Y%m%d'))"
        }
    }
    if [fields][log_topic] == "usercenter_log" {
        mutate {
            gsub => [
                "source", "/ubox/logs/platform/usercenter/app/", ""
            ]
        }
        grok {
            match => ["message", "%{HTTPDATE:raw_datetime}"]
        }

        date {
            match => ["raw_datetime", "YYYY/MM/dd HH:mm:ss,SSS"]
            remove_field => [ "raw_datetime" ]
        }

        ruby {
            code => "event.set('local_time', event.get('@timestamp').time.localtime.strftime('%Y%m%d'))"
        }
    }

    if [fields][log_topic] in ["nginx_access_log", "nginx_error_log"] {
        mutate {
            gsub => [
                "source", "/ubox/logs/", ""
            ]
        }
        if [fields][log_topic] == "nginx_access_log" {
            grok {
                match => ["message", "%{HTTPDATE:raw_datetime}"]
            }
            date {
                match => ["raw_datetime", "dd/MMM/YYYY:HH:mm:ss Z"]
                remove_field => [ "raw_datetime" ]
            }

            ruby {
                code => "event.set('local_time', event.get('@timestamp').time.localtime.strftime('%Y%m%d'))"
            }
        }
    }

    if [app] == "th" {
        kv {
            field_split => "&?"
            remove_field => [ "message" ]
        }

        date {
            match => [ "time", "YYYY-MM-dd HH:mm:ss" ]
            remove_field => [ "time" ]
        }
    }

}
output {
    if [type] in ["alipay_log", "weixinpay_log", "uboxapi_log", "actualtrade_log", "client_log","uboxgame_log"] {
        file {
            codec => line { format => "%{message}"}
            path => "/ubox/logstash/%{[fields][app]}/%{source}"
        }
    }

   if [fields][log_topic] ==  "monk_log" {
        file {
            codec => line { format => "%{message}"}
            path => "/ubox/logstash/%{[fields][document_type]}/%{source}"
        }
    }

   if [fields][log_topic] in  ["escort_log", "usercenter_log"] {
        file {
            codec => line { format => "%{message}"}
            path => "/ubox/logstash/%{[fields][document_type]}/%{source}-%{+YYYY-MM-dd}"
        }
    }


    if [fields][log_topic] == "nginx_access_log" {
        file {
            codec => line { format => "%{message}"}
            path => "/ubox/logstash/%{[fields][document_type]}/%{source}.%{local_time}"
        }
    }

    if [fields][log_topic] == "nginx_error_log" {
        file {
            codec => line { format => "%{message}"}
            path => "/ubox/logstash/%{[fields][document_type]}/%{source}.%{+yyyyMMdd}"
        }
    }
}
   